%YAML 1.2
---

name: K_Highlighter
file_extensions: [k]
scope: source.k 

contexts:
  prototype:
    - include: comments

  main:
    
    - include: module

    - include: culoare1
    - include: culoare2
    - include: culoare3
    - include: culoare4
    - include: numere
    - include: celelalte
    - include: predef
    - include: paranth
    - include: celule
    - include: strings
    - include: syntax1
    - include: syntax2
    
    
    

  module:
    - match: (module\s+|imports\s+)([-A-Za-z0-9]+\s)
      captures: 
        1: mov
        2: portocaliu


  syntax1:
    - match: (syntax\s+)([A-Z]+[-_a-zA-Z]+\s+)
      captures: 
        1: rosu
        2: main

  syntax2:
    - match: (syntax\s+)([a-z][-_A-Za-z]+\s+)
      captures: 
        1: rosu
        2: rosu_inchis




  culoare1:
    - match: '\b(endmodule)\b'
      scope: mov

  culoare2:
    - match: '\b(configuration|requires|Kresult|rule|when|notBool)\b'
      scope: rosu

  culoare3:
    - match: '\b(Int|String|Bool|Id|Float|List)\b'
      scope: albastru

  culoare4:
    - match: ::=|=>|\%|\+|\*|/| - | \|-> 
      scope: portocaliu

  numere:
    - match: '(-)?[0-9]+'
      scope: number

  celelalte:
    - match: '[a-zA-Z][0-9]+'
      scope: main

  predef:
    - match: '\$PGM|PGM|\.Map|Map|\.List'
      scope: verde_inchis










  paranth:
    - match: '(\[[A-Za-z\(0-9\)\,A-Za-z]+\])\s'
      scope: roz_ish
      

  celule:
    - match: '<'
      scope: verde
      push: celule2

  celule2:
    
    - meta_scope: verde
    - match: '>'
      pop: true

  strings:
    - match: '"'
      scope: string
      push: inside_string

  inside_string:
    - meta_scope: string
    - match: '"'
      pop: true

  comments:
    - match: '//'
      scope: comment
      push: sfarsit_comment
       
  sfarsit_comment: 
        - meta_scope: comment
        - match: $   # sfarsit de linie (\n)
          pop: true
